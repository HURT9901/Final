@page "/profesores/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService SweetAlertService

<ProfesorForm @ref="profesorForm" Profesor="Profesor" OnSubmit="Create" ReturnAction="Return"/>

@code {
    private Profesor Profesor = new();
    private ProfesorForm profesorForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/profesores", Profesor);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await SweetAlertService.FireAsync("Error", message);
            return;
        }

        Return();

        var toast = SweetAlertService.Mixin(new SweetAlertOptions
        {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 6000
        });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Registro creado con éxito");
    }


    private void Return()
    {
        profesorForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/profesores");
    }

}